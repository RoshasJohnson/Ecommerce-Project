# Generated by Django 4.0.2 on 2022-02-18 15:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usercreation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=50)),
                ('coupen', models.CharField(max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200)),
                ('Category_offer', models.IntegerField(max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categorys',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Coupen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Coupencode', models.IntegerField(blank=True, max_length=200, null=True)),
                ('Coupen_offer', models.IntegerField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerAdress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=99)),
                ('house_name', models.CharField(max_length=200, null=True)),
                ('street_name', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=200, null=True)),
                ('state', models.CharField(max_length=200, null=True)),
                ('country', models.CharField(max_length=200, null=True)),
                ('post_code', models.IntegerField(max_length=200, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CustomerAdress',
                'verbose_name_plural': 'CustomerAdress',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Icon_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Logo_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Banner_image1', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Banner_image2', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Banner_image3', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('Footer_image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200, null=True)),
                ('product_description', models.TextField(max_length=10000, null=True)),
                ('product_prize', models.IntegerField(max_length=200, null=True)),
                ('stock', models.IntegerField(max_length=200, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('product_offer', models.IntegerField(default=0, max_length=200, null=True)),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('product_image1', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('product_image2', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('product_image3', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('category_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.category')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ordered', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Delivered', 'Delivered'), ('Return', 'Return'), ('Canceled', 'Canceled'), ('Packed', 'Packed')], default='Processing', max_length=100)),
                ('transcation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('payment_method', models.CharField(max_length=10, null=True)),
                ('total_prize', models.IntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, default=1, null=True)),
                ('date_delivered', models.DateField(default='2022-01-01')),
                ('Customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.customeradress')),
                ('order_product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.product')),
                ('user_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.category')),
                ('product_offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.product')),
            ],
        ),
        migrations.CreateModel(
            name='MyWishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.product')),
                ('username', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
